stages:
  - build
  - docker
  - deploy

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - cd src/CommunicationControl
    - dotnet publish -c Release -p:PublishProfile=FolderProfile -o ./published DevOpsProject/DevOpsProject.CommunicationControl.API.csproj
  artifacts:
    paths:
      - src/CommunicationControl/published

build-map-client:
  stage: build
  image: node:latest
  script:
    - cd src/MapClient
    - npm install
    - npm run build
  artifacts:
    paths:
      - src/MapClient/dist

docker-com-control:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  needs:
    - build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - if [ "${CI_COMMIT_REF_NAME}" = "main" ];
      then
      export DOCKER_IMAGE_TAG=latest;
      elif [-v "${CI_COMMIT_TAG}"];
      then
      export DOCKER_IMAGE_TAG=["CI_COMMIT_TAG"];
      else
      export DOCKER_IMAGE_TAG=1.0.${CI_PIPELINE_IID}-${CI_BUILD_REF_NAME};
      fi
    - cd src/CommunicationControl
    - docker build -t ${CI_REGISTRY}/kzotkin/hiveemulator/communication-control:${DOCKER_IMAGE_TAG} -f  DevOpsProject/Dockerfile .
    - docker push ${CI_REGISTRY}/kzotkin/hiveemulator/communication-control:${DOCKER_IMAGE_TAG}
  after_script:
    - docker logout ${CI_REGISTRY}

docker-map-client:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  needs:
    - build-map-client
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - if [ "${CI_COMMIT_REF_NAME}" = "main" ];
      then
      export DOCKER_IMAGE_TAG=latest;
      elif [-v "${CI_COMMIT_TAG}"];
      then
      export DOCKER_IMAGE_TAG=["CI_COMMIT_TAG"];
      else
      export DOCKER_IMAGE_TAG=1.0.${CI_PIPELINE_IID}-${CI_BUILD_REF_NAME};
      fi
    - cd src/MapClient
    - docker build -t ${CI_REGISTRY}/kzotkin/hiveemulator/map-client:${DOCKER_IMAGE_TAG} .
    - docker push ${CI_REGISTRY}/kzotkin/hiveemulator/map-client:${DOCKER_IMAGE_TAG}
  after_script:
    - docker logout ${CI_REGISTRY}

deploy_dev:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster k8s --server="${DEV_KUB_SERVER}"
    - echo "${CERTIFICATE_AUTHORITY_DATA}" > /tmp/ca.crt
    - kubectl config set-cluster k8s --certificate-authority=/tmp/ca.crt
    - kubectl config set-credentials gitlab --token="${DEV_KUB_USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl set image deployment/com-control com-control=registry.gitlab.com/kzotkin/hiveemulator/communication-control:cicd
    - kubectl set image deployment/map-client map-client=${CI_REGISTRY}/kzotkin/hiveemulator/map-client:${DOCKER_IMAGE_TAG}
  when: manual
